name: CI

on:
  push:
    branches: [main, develop, dependabot/develop]
  pull_request:
    branches: [main, develop, dependabot/develop]

env:
  SCHEMA_VERSION: "${{ github.ref == 'refs/heads/main' && 'main' || 'dev' }}"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache node_modules 📦
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Load GraphQL 🕸
        run: API_BASE=https://staging.api.uobtheatre.com yarn codegen

      - name: Run tests 🧪
        run: yarn test:unit --coverage

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache node_modules 📦
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Load GraphQL Codegen 🕸
        run: GQL_SCHEMA=https://raw.githubusercontent.com/BristolSTA/uobtheatre-api/${{ env.SCHEMA_VERSION }}/schema.graphql yarn codegen

      - name: Run linter 👀
        run: yarn lint:tsc && yarn lint:js

      - name: Check Prettier ✨
        run: yarn prettier:check

  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Copy Testing Env ✉
        run: cp .env.test .env

      - name: Setup node env 🏗
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache node_modules 📦
        uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Yarn Dependencies 👨🏻‍💻
        run: yarn

      - name: Authenticate with GitHub Container Registry 🔒
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy Dev Container Env 📁
        run: cp .devcontainer/.env.example .devcontainer/.env

      - name: Start Real API ⭐
        run: docker compose -f .devcontainer/docker-compose.yml up -d postgres uobtheatre-api

      - name: Wait for API to boot 💫
        run: node .github/scripts/waiton-api.js http://localhost:9000

      - name: Load GraphQL Codegen 🕸
        run: API_BASE=http://localhost:9000 yarn codegen

      - name: Run End-to-End Tests 🧪
        uses: cypress-io/github-action@v6
        timeout-minutes: 7
        with:
          start: yarn beforetest:e2e:ci
          wait-on: 'http://localhost:3000'
