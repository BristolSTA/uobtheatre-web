@import './tiptap';

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  .fade-enter-active,
  .fade-leave-active {
    transition: opacity 0.5s;
  }
  .fade-enter,
  .fade-leave-to {
    opacity: 0;
  }
}

@layer components {
  .btn {
    @apply rounded-sm px-6 py-2 cursor-pointer inline-block;
    @apply text-white;

    &.disabled,
    &[disabled] {
      @apply cursor-not-allowed;
    }
    &:focus {
      @apply outline-none;
    }
    &:hover:not(.disabled),
    &:hover:not([disabled]) {
      @apply bg-sta-gray-light;
    }
  }

  .btn-outline {
    @apply bg-transparent border border-solid;
  }

  $colors: ('rouge', 'orange', 'green', 'gray', 'gray-light');
  @each $color in $colors {
    .btn-#{$color}:not(.btn-outline) {
      @apply bg-sta-#{$color};
    }
    .btn-#{$color}.btn-outline {
      @apply border-sta-#{$color};
      @apply text-sta-#{$color};
    }
    .btn-#{$color}:hover:not(.disabled):not([disabled]) {
      $hov-color: 'bg-sta-#{$color}-dark';
      @if (str-index($color, '-light')) {
        $new-col: str-replace($color, '-light', '');
        $hov-color: 'bg-sta-#{$new-col}-dark';
      }

      @apply #{$hov-color};
      @apply text-white;
      @apply border-transparent;
    }
  }
}

@layer utilities {
  .text-h1,
  .text-h2,
  .text-h3,
  .text-h4 {
    @apply font-semibold;
  }
}

// Fix issue with Sweetalert2 text colour
.swal2-container {
  .text-white {
    color: white !important;
  }
}
